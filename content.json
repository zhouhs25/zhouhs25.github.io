[{"title":"My hexo server note","date":"2016-12-07T16:32:39.000Z","path":"2016/12/07/My-hexo-server-note/","text":"qiniutuchuang google search google search console and sitemap visitor count fork me on github","tags":[]},{"title":"","date":"2016-12-07T04:47:00.120Z","path":"2016/12/06/My-vimrc/","text":"title: My vimrcdate: 2016-12-06 23:47:00tags: set nocompatible “ be iMproved, required filetype off “ required let $ROOT=’e:\\depot\\pplib\\drivers\\powerplay\\’ “Set mapleaderlet mapleader = “,” set wildignore+=*.d“ set the runtime path to include Vundle and initializeset rtp+=$VIM\\vimfiles\\bundle\\vundle call vundle#begin(‘e:\\study\\bundle’)“ alternatively, pass a path where Vundle should install plugins“call vundle#begin(‘~/some/path/here’) “ let Vundle manage Vundle, requiredPlugin ‘VundleVim/Vundle.vim’ “Plugin ‘Rip-Rip/clang_complete’Plugin ‘scrooloose/nerdtree’ “ bufexplorer“Plugin ‘jlanzarotta/bufexplorer’ “Plugin taglistPlugin ‘taglist.vim’ “minibufexplPlugin ‘fholgado/minibufexpl.vim’ “EasyMotionPlugin ‘easymotion/vim-easymotion’ “autoclosePlugin ‘Townk/vim-autoclose’ “ctrlpPlugin ‘kien/ctrlp.vim’“ctags“Plugin ‘Valloric/YouCompleteMe’ “cscopePlugin ‘vim-scripts/cscope.vim’ “easygrepPlugin ‘dkprice/vim-easygrep’ “agPlugin ‘rking/ag.vim’ “gruvbox color scheme“Plugin ‘morhetz/gruvbox’ “Plugin ‘sickill/vim-monokai’“Plugin ‘solarized/twilight’ Plugin ‘vim-scripts/candy.vim’ “highlightPlugin ‘jaxbot/semantic-highlight.vim’ “AsyncRunPlugin ‘skywind3000/asyncrun.vim’ “YouCompleteMe“Plugin ‘Valloric/YouCompleteMe’ “gen tags“Plugin ‘jsfaint/gen_tags.vim’ “gtagsPlugin ‘aceofall/gtags.vim’ “ Keep Plugin commands between vundle#begin/end.“ plugin on GitHub repo“Plugin ‘tpope/vim-fugitive’“ plugin from http://vim-scripts.org/vim/scripts.html“Plugin ‘L9’“ Git plugin not hosted on GitHub“Plugin ‘git://git.wincent.com/command-t.git’“ git repos on your local machine (i.e. when working on your own plugin)“Plugin ‘file:///home/gmarik/path/to/plugin’“ The sparkup vim script is in a subdirectory of this repo called vim.“ Pass the path to set the runtimepath properly.“Plugin ‘rstacruz/sparkup’, {‘rtp’: ‘vim/‘}“ Avoid a name conflict with L9“Plugin ‘user/L9’, {‘name’: ‘newL9’} “ All of your Plugins must be added before the following linecall vundle#end() “ requiredfiletype plugin indent on “ required“ To ignore plugin indent changes, instead use:“filetype plugin on““ Brief help“ :PluginList - lists configured plugins“ :PluginInstall - installs plugins; append ! to update or just :PluginUpdate“ :PluginSearch foo - searches for foo; append ! to refresh local cache“ :PluginClean - confirms removal of unused plugins; append ! to auto-approve removal““ see :h vundle for more details or wiki for FAQ“ Put your non-Plugin stuff after this line set nocompatiblesource $VIMRUNTIME/vimrc_example.vimsource $VIMRUNTIME/mswin.vimbehave mswin “set diffexpr=YourDiff()“function YourDiff()“ let opt = ‘-a –binary ‘“ if &amp;diffopt =~ ‘icase’ | let opt = opt . ‘-i ‘ | endif“ if &amp;diffopt =~ ‘iwhite’ | let opt = opt . ‘-b ‘ | endif“ let arg1 = v:fname_in“ if arg1 =~ ‘ ‘ | let arg1 = ‘“‘ . arg1 . ‘“‘ | endif“ let arg2 = v:fname_new“ if arg2 =~ ‘ ‘ | let arg2 = ‘“‘ . arg2 . ‘“‘ | endif“ let arg3 = v:fname_out“ if arg3 =~ ‘ ‘ | let arg3 = ‘“‘ . arg3 . ‘“‘ | endif“ let eq = ‘’“ if $VIMRUNTIME =~ ‘ ‘“ if &amp;sh =~ ‘\\&lt;cmd’“ let cmd = ‘“”‘ . $VIMRUNTIME . ‘\\diff”‘“ let eq = ‘“‘“ else“ let cmd = substitute($VIMRUNTIME, ‘ ‘, ‘“ ‘, ‘’) . ‘\\diff”‘“ endif“ else“ let cmd = $VIMRUNTIME . ‘\\diff’“ endif“ silent execute ‘!’ . cmd . ‘ ‘ . opt . arg1 . ‘ ‘ . arg2 . ‘ &gt; ‘ . arg3 . eq“endfunction “Personal Settings.“More to be added soon.“execute pathogen#infect()filetype plugin indent onsyntax enablesyntax on“Set the status line options. Make it show more information.set laststatus=2set statusline=%F%m%r%h%w\\ [FORMAT=%{&amp;ff}]\\ [TYPE=%Y]\\ [POS=%l,%v][%p%%]\\ %{strftime(\\”%d/%m/%y\\ -\\ %H:%M\\”)}“Set Color Scheme and Font Options“colorscheme gruvbox“colorscheme monokai“colorscheme twilightcolorscheme candyset guifont=Consolas:h12“set line no, buffer, search, highlight, autoindent and more.set nuset hiddenset ignorecaseset incsearchset smartcaseset showmatchset autoindentset rulerset vbset viminfo+=n$VIM/_viminfoset noerrorbellsset showcmdset mouse=aset history=1000set undolevels=1000set exrcset secureset tabstop=4set softtabstop=4set shiftwidth=4“set noexpandtabset expandtabset colorcolumn=110set guifont=Consolas:h10highlight ColorColumn ctermbg=darkgrayset bg=darkset backupdir=e:\\study\\vimswap “Plugins ……………………………..“ NERDTreenmap :NERDTreeToggleimap :NERDTreeTogglelet NERDTreeQuitOnOpen=1let g:NERDTreeWinPos = “right” “taglistlet Tlist_Show_One_File=1let Tlist_Exit_OnlyWindow=1let Tlist_Use_Right_Window=0map :TlistToggle “set tags=’$PPLIBTAGS’set tags=e:\\depot\\pplib\\drivers\\powerplay*\\tags “minibufexplmap :MBEToggle! “ Gtagsmap :GtagsCursor“easymotionmap (easymotion-prefix)map s (easymotion-sn)omap s (easymotion-tn)“map n (easymotion-next)“map N (easymotion-prev)let g:EasyMotion_smartcase=1“map r (easymotion-repeat)“map l (easymotion-lineforward)“map j (easymotion-j)“map k (easymotion-k)“map h (easymotion-linebackward) map r (easymotion-repeat)“nmap (easymotion-lineforward)“nmap (easymotion-j)“nmap (easymotion-k)“nmap (easymotion-linebackward)nmap f (easymotion-f)nmap F (easymotion-F)“ctrlp“let g:ctrlp_map=’‘let g:ctrlp_cmd=’CtrlP :pwd’noremap :CtrlP $ROOT “cscope “Easygrep“let g:EasyGrepCommand = 0“let g:EasyGrepRecursive = 1“let g:EasyGrepIgnoreCase = 1“let g:EasyGrepFilesToExclude = “.docx, .xlsx, .zip, cscope., .a, .o, .pyc, .gcno, *.gcda” “Ag let g:ag_prg=”ag –column –nogroup –noheading –ignore /ai –ignore /tags –ignore /build –ignore /tools –ignore /firmware –ignore .d –ignore *.obj” “Semantic-highlight“nnoremap s :SemanticHighlight “Plugins done …………………………… “Fast reloading of the .vimrcmap ss :w :source $vim_vimrc“Fast editing of .vimrcmap ee :e $vim_vimrc “netrw settinglet g:netrw_winsize=30nmap fe :Sexplore! “q!map :q! “excludeset wildignore+=/tmp/,e:/pplib/drivers/powerplay/firmware/*“ defult directorycd $ROOT “gtagsset cscopetagset csprg=gtags-cscopecs add GTAGS “let GtagsCscope_Auto_Load=1“let CtagsCscope_Auto_Map=1“let GtagsCscope_Quiet=1 let Gtags_VerticalWindow=0“ Gtags_Auto_Maplet Gtags_Auto_Update=0let Gtags_No_Auto_Jump=1","tags":[]},{"title":"Hello World","date":"2016-12-07T04:27:59.609Z","path":"2016/12/06/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]